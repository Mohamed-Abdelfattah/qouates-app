{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/NewCommentForm.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/quote-detail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","CommentItem","item","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","error","status","sendRequest","onAddComment","useEffect","submitFormHandler","event","preventDefault","commentData","current","value","quoteId","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","params","useParams","getAllComments","loadedComments","data","addCommentHandler","useCallback","length","onClick","QuoteDetails","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"mappings":"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","file":"static/js/4.bf1686cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1sGza\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__iVAbA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3_TjS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3rs4S\",\"loading\":\"NewCommentForm_loading__1qArF\",\"control\":\"NewCommentForm_control__1h-sH\",\"actions\":\"NewCommentForm_actions__24ep9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__Z8z3D\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { error, status, sendRequest } = useHttp(addComment);\n  const { onAddComment, id } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddComment();\n    }\n  }, [status, error, onAddComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    // optional: Could validate here\n    sendRequest({\n      commentData: { text: commentTextRef.current.value },\n      quoteId: id,\n    });\n    // console.log(commentTextRef.current.value);\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport CommentsList from './CommentsList';\nimport NewCommentForm from './NewCommentForm';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\n\nconst Comments = () => {\n  //\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { sendRequest, data: loadedComments, status } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(params.id);\n  }, [sendRequest, params.id]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler = useCallback(() => {\n    sendRequest(params.id);\n  }, [sendRequest, params.id]);\n\n  let comment;\n\n  if (status === 'pending') {\n    comment = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comment = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comment = <p>No Comments yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm id={params.id} onAddComment={addCommentHandler} />\n      )}\n\n      {comment}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { useEffect } from 'react';\r\nimport { Link, Route, useParams, useRouteMatch } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport Comments from '../components/comments/Comments';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetails = (props) => {\r\n  //\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  const {\r\n    status,\r\n    sendRequest,\r\n    error,\r\n    data: loadedQuote,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(params.id);\r\n  }, [sendRequest, params.id]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <h3>Ooops! found no quote</h3>;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <HighlightedQuote author={loadedQuote.author} text={loadedQuote.text} />\r\n      <div className=\"centered\">\r\n        <Route path={match.path} exact>\r\n          <Link to={`${match.url}/comments`} className=\"btn--flat\">\r\n            Load Comments\r\n          </Link>\r\n        </Route>\r\n      </div>\r\n      {/* max made the path as the button/link above */}\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default QuoteDetails;\r\n"],"sourceRoot":""}